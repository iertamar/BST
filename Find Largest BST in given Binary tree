/*
Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function would be added by GfG's Online Judge.*/


/*The Node class is as follows
class Node{
        int data;
	Node left,right;
	Node(int data)
        {
		this.data = data;
		this.left = null;
		this.right = null;
	}
}*/
class GfG
{
    public int largestBst(Node root)
    {
        if(isBST(root))
        return size(root);
        else
        return Math.max(largestBst(root.left) , largestBst(root.right));
    }
    int size(Node root)
    {
        if(root==null)
        return 0;
        else
        return (1 + size(root.left) + size(root.right));
    }
        ArrayList <Integer> list = new ArrayList<Integer>();
    boolean isBST(Node root)
    {
       list.clear();
       inorder(root);
       int x = 0;
       int a[] = new int[list.size()];
       for (int i = 0; i < list.size(); i++)
       {
        a[i] = list.get(i);
       }
      
       for(int i=0; i<a.length-1 ; i++)
         {
             if(a[i]>a[i+1])
             {
                 x=10;
                 break;
             }
         }
       if(x==10)
       return false;
       else
       return true;
    }
    void inorder(Node root)
    {
         if(root!=null)
        {
            inorder(root.left);
            list.add(root.data);
            inorder(root.right);
        }
    }
}
